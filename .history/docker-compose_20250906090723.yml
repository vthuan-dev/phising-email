# docker-compose.yml
version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./config/elastic/index-template.json:/usr/share/elasticsearch/config/index-template.json
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash
    volumes:
      - ./config/logstash/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf
    ports:
      - "5044:5044"
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
    depends_on:
      elasticsearch:
        condition: service_healthy

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    volumes:
      - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - log_data:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - logstash

  elastalert:
    image: jertel/elastalert2:2.15.0
    container_name: elastalert
    volumes:
      - ./config/elastalert:/opt/elastalert/config
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: email_agent
    volumes:
      - log_data:/var/log
    environment:
      - MODE=${MODE:-llm}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
      - IMAP_HOST=${IMAP_HOST}
      - IMAP_USER=${IMAP_USER}
      - IMAP_PASS=${IMAP_PASS}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - GEMINI_RATE_LIMIT=${GEMINI_RATE_LIMIT:-60}
      - LLM_CACHE_ENABLED=${LLM_CACHE_ENABLED:-true}
    depends_on:
      elasticsearch:
        condition: service_healthy

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: phish_api
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
    depends_on:
      elasticsearch:
        condition: service_healthy

  gradio_demo:
    build:
      context: ./llm
      dockerfile: Dockerfile
    container_name: gradio_demo
    ports:
      - "7860:7860"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
    profiles:
      - dev

volumes:
  es_data:
  log_data:
